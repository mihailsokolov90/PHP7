<?php
/**
 * Created by PhpStorm.
 * User: Михаил
 * Date: 11.03.2021
 * Time: 15:59
 */

use Throwable;

class ExceptionaizerException extends \Exception
{
    public function __construct(int $code = 0, string $message = "", $file = "", $line = "", Throwable $previous = null)
    {
        parent::__construct($message, $code, $previous);
        $this->file = $file;
        $this->line = $line;
    }

    public function __toString()
    {
        $msg = "ExceptionaizerException was occurred<br>\n";
        $msg .= parent::__toString(); // TODO: Change the autogenerated stub

        return $msg;
    }
}


class E_USER_ERROR_EXCEPTION extends ExceptionaizerException
{
    public function __construct(int $code = 0, string $message = "", $file = "", $line = "", Throwable $previous = null)
    {
        parent::__construct($code, $message, $file, $line, $previous);
    }

    public function __toString()
    {
        $msg = "E_USER_ERROR_EXCEPTION was occurred<br>\n";
        $msg .= parent::__toString(); // TODO: Change the autogenerated stub

        return $msg;
    }
}


class E_ERROR_EXCEPTION extends ExceptionaizerException
{
    public function __construct(int $code = 0, string $message = "", $file = "", $line = "", Throwable $previous = null)
    {
        parent::__construct($code, $message, $file, $line, $previous);
    }

    public function __toString()
    {
        $msg = "E_ERROR_EXCEPTION was occurred<br>\n";
        $msg .= parent::__toString(); // TODO: Change the autogenerated stub

        return $msg;
    }
}

