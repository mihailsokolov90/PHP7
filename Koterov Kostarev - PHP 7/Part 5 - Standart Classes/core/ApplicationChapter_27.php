<?php
/**
 * Created by PhpStorm.
 * User: Михаил
 * Date: 26.04.2021
 * Time: 15:40
 */

namespace ch27;

use core\ApplicationBase;

require_once "ApplicationBase.php";


class ApplicationChapter_27 extends ApplicationBase
{
    # Traits ------------------------------------------------------

    # Init ------------------------------------------------------

    public function __construct()
    {
        parent::__construct();
    }

    # Run ------------------------------------------------------

    public function Exec()
    {
        //parent::Exec(); // TODO: Change the autogenerated stub
        $this->ClosuresTest();
    }

    # Methods ------------------------------------------------------

    public function DirectoryClassTest()
    {
        self::PrintHeader4("Directory Class Test");

        $df = dir("C:/Windows");

        self::PrintHeader("Current dir: ".$df->path, 6);

        while ( ($d = $df->read()) !== false )
        {
            $path = $df->path."/".$d;
            $isfile = is_file($path);

            if( $isfile === true)
            {
                self::WriteLine("FILE: $d");
            }
            else
            {
                self::WriteLine($d);
            }
        }
    }

    public function ClosuresTest()
    {
        self::PrintHeader("Closure Test");

        $clsRender = new class {

            private $_title = "Some Title";
            private $_body = "Some Body";
            private  $_content = "";
            private $_pages = [];

            public function __construct()
            {

            }

            public function AddPage(callable $pageFunc, $name = "page")
            {
                //\Closure::bind($pageFunc, $this, __CLASS__);

                $this->_pages[$name] = $pageFunc->bindTo($this, __CLASS__);
            }

            public function Render($page)
            {
                if( !isset($this->_pages[$page]) )
                {
                    echo "PAGE NOT EXISTS";

                    return false;
                }

                $this->_pages[$page]();

                $this->_content = <<<HTML
<!doctype html>
<html lang="en">
<head>
<meta charset="UTF-8">
             <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
                         <meta http-equiv="X-UA-Compatible" content="ie=edge">
             <title>{$this->_title}</title>
</head>
<body>
    <div>
    {$this->_body}
    </div>
</body>
</html>
HTML;
                echo "<pre style='font-family: Consolas, Arial, sans-serif; font-size: 14px; font-weight: 600;'>";
                echo htmlspecialchars($this->_content);
                echo "</pre>";

                return true;
            }
        };

        $clsRender->AddPage( function () {

            $this->_title = "MyPage Title";
            $this->_body = "MyPage Body";

        }, "MyPage" );

        $clsRender->Render("MyPage");
    }
}